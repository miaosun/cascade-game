//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-05 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "D:\\Workspace\\MFES\\Project\\Cascade\\lib\\io.vpp".

// ***** VDMTOOLS START Name=package KEEP=NO
package logic;
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Tuple;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class IO implements EvaluatePP {

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=IOSentinel KEEP=NO
  class IOSentinel extends Sentinel {

    public final int echo = 0;

    public final int fecho = 1;

    public final int ferror = 2;

    public final int nr_functions = 3;


    public IOSentinel () throws CGException {}


    public IOSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=IOSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new IOSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel

// ***** VDMTOOLS START Name=child KEEP=NO
  protected external_IO child = new external_IO(this);
// ***** VDMTOOLS END Name=child


// ***** VDMTOOLS START Name=vdm_init_IO KEEP=NO
  private void vdm_init_IO () {
    try {
      setSentinel();
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_IO


// ***** VDMTOOLS START Name=IO KEEP=NO
  public IO () throws CGException {
    vdm_init_IO();
  }
// ***** VDMTOOLS END Name=IO


// ***** VDMTOOLS START Name=writeval#1|Object KEEP=NO
  public Boolean writeval (final Object val) throws CGException {
    Boolean childResult_2 = child.impl_writeval(val);
    return childResult_2;
  }
// ***** VDMTOOLS END Name=writeval#1|Object


// ***** VDMTOOLS START Name=fwriteval#3|String|Object|Object KEEP=NO
  public Boolean fwriteval (final String filename, final Object val, final Object fdir) throws CGException {
    Boolean childResult_4 = child.impl_fwriteval(filename, val, fdir);
    return childResult_4;
  }
// ***** VDMTOOLS END Name=fwriteval#3|String|Object|Object


// ***** VDMTOOLS START Name=freadval#1|String KEEP=NO
  public Tuple freadval (final String f) throws CGException {
    Tuple childResult_2 = child.impl_freadval(f);
    if (!this.post_freadval(f, childResult_2).booleanValue()) 
      UTIL.RunTime("Postcondition failure in freadval");
    return childResult_2;
  }
// ***** VDMTOOLS END Name=freadval#1|String


// ***** VDMTOOLS START Name=post_freadval#2|String|Tuple KEEP=NO
  public Boolean post_freadval (final String f, final Tuple RESULT) throws CGException {
    Boolean varRes_3 = null;
    {
      boolean succ_4 = false;
      Tuple tmpVal_5 = RESULT;
      Boolean b = null;
      Object t = null;
      /* mk_(b, t) */
      if (2 == tmpVal_5.Length()) {
        succ_4 = true;
        /* b */
        b = (Boolean)tmpVal_5.GetField(1);
        /* t */
        t = (Object)tmpVal_5.GetField(2);
      }
      else 
        succ_4 = false;
      if (!succ_4) 
        UTIL.RunTime("Pattern match did not succeed in value definition");
      if (!b.booleanValue()) 
        varRes_3 = Boolean.valueOf(UTIL.equals(t, null));
      else 
        varRes_3 = Boolean.TRUE;
    }
    return varRes_3;
  }
// ***** VDMTOOLS END Name=post_freadval#2|String|Tuple


// ***** VDMTOOLS START Name=echo#1|String KEEP=NO
  public Boolean echo (final String text) throws CGException {
    sentinel.entering(((IOSentinel)sentinel).echo);
    try {
      return fecho(new String(""), text, null);
    }
    finally {
      sentinel.leaving(((IOSentinel)sentinel).echo);
    }
  }
// ***** VDMTOOLS END Name=echo#1|String


// ***** VDMTOOLS START Name=fecho#3|String|String|Object KEEP=NO
  public Boolean fecho (final String filename, final String text, final Object fdir) throws CGException {
    sentinel.entering(((IOSentinel)sentinel).fecho);
    try {
      if (!this.pre_fecho(filename, text, fdir).booleanValue()) 
        UTIL.RunTime("Precondition failure in fecho");
      return child.impl_fecho(filename, text, fdir);
    }
    finally {
      sentinel.leaving(((IOSentinel)sentinel).fecho);
    }
  }
// ***** VDMTOOLS END Name=fecho#3|String|String|Object


// ***** VDMTOOLS START Name=pre_fecho#3|String|String|Object KEEP=NO
  public Boolean pre_fecho (final String filename, final String text, final Object fdir) throws CGException {
    return Boolean.valueOf(UTIL.equals(Boolean.valueOf(UTIL.equals(filename, new String(""))), Boolean.valueOf(UTIL.equals(fdir, null))));
  }
// ***** VDMTOOLS END Name=pre_fecho#3|String|String|Object


// ***** VDMTOOLS START Name=ferror KEEP=NO
  public String ferror () throws CGException {
    sentinel.entering(((IOSentinel)sentinel).ferror);
    try {
      return child.impl_ferror();
    }
    finally {
      sentinel.leaving(((IOSentinel)sentinel).ferror);
    }
  }
// ***** VDMTOOLS END Name=ferror

}
;
