//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-08 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "D:\\Workspace\\MFES\\Project\\Cascade\\Cell/Cell.rtf".

// ***** VDMTOOLS START Name=package KEEP=NO
package logic;
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class Cell implements EvaluatePP {

// ***** VDMTOOLS START Name=color KEEP=NO
  public volatile Object color = null;
// ***** VDMTOOLS END Name=color

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=CellSentinel KEEP=NO
  class CellSentinel extends Sentinel {

    public final int clear = 0;

    public final int Cell__0_ = 1;

    public final int makeBomb = 2;

    public final int Cell__1_n_Color = 3;

    public final int nr_functions = 4;


    public CellSentinel () throws CGException {}


    public CellSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=CellSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new CellSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_Cell KEEP=NO
  private void vdm_init_Cell () {
    try {
      setSentinel();
      color = new quotes.empty();
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Cell


// ***** VDMTOOLS START Name=Cell KEEP=NO
  public Cell () throws CGException {
    try {
      vdm_init_Cell();
      setSentinel();
    }
    catch (Throwable e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=Cell


// ***** VDMTOOLS START Name=Cell#1|Object KEEP=NO
  public Cell (final Object c) throws CGException {
    try {
      vdm_init_Cell();
      color = UTIL.clone(c);
      setSentinel();
    }
    catch (Throwable e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=Cell#1|Object


// ***** VDMTOOLS START Name=clear KEEP=NO
  public void clear () throws CGException {
    sentinel.entering(((CellSentinel)sentinel).clear);
    try {
      color = new quotes.empty();
    }
    finally {
      sentinel.leaving(((CellSentinel)sentinel).clear);
    }
  }
// ***** VDMTOOLS END Name=clear


// ***** VDMTOOLS START Name=makeBomb KEEP=NO
  public void makeBomb () throws CGException {
    sentinel.entering(((CellSentinel)sentinel).makeBomb);
    try {
      if (!this.pre_makeBomb().booleanValue()) 
        UTIL.RunTime("Precondition failure in makeBomb");
      color = new quotes.bomb();
    }
    finally {
      sentinel.leaving(((CellSentinel)sentinel).makeBomb);
    }
  }
// ***** VDMTOOLS END Name=makeBomb


// ***** VDMTOOLS START Name=pre_makeBomb KEEP=NO
  public Boolean pre_makeBomb () throws CGException {
    return Boolean.valueOf(!UTIL.equals((this.color), new quotes.bomb()));
  }
// ***** VDMTOOLS END Name=pre_makeBomb

}
;
