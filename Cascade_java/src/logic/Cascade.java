//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-06 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "D:\\Workspace\\MFES\\Project\\Cascade\\Cascade/Cascade.rtf".

// ***** VDMTOOLS START Name=package KEEP=NO
package logic;
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class Cascade implements EvaluatePP {

// ***** VDMTOOLS START Name=board KEEP=NO
  public volatile Board board = null;
// ***** VDMTOOLS END Name=board

// ***** VDMTOOLS START Name=level KEEP=NO
  public volatile Number level = null;
// ***** VDMTOOLS END Name=level

// ***** VDMTOOLS START Name=score KEEP=NO
  public volatile Number score = null;
// ***** VDMTOOLS END Name=score

// ***** VDMTOOLS START Name=timeToNextLevel KEEP=NO
  public volatile Number timeToNextLevel = null;
// ***** VDMTOOLS END Name=timeToNextLevel

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=CascadeSentinel KEEP=NO
  class CascadeSentinel extends Sentinel {

    public final int play = 0;

    public final int Cascade = 1;

    public final int nr_functions = 2;


    public CascadeSentinel () throws CGException {}


    public CascadeSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=CascadeSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new CascadeSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel

// ***** VDMTOOLS START Name=MinNumber KEEP=NO
  public static final Number MinNumber = new Integer(3);
// ***** VDMTOOLS END Name=MinNumber

// ***** VDMTOOLS START Name=NLinesNextLevel KEEP=NO
  public static final Number NLinesNextLevel = new Integer(10);
// ***** VDMTOOLS END Name=NLinesNextLevel


// ***** VDMTOOLS START Name=vdm_init_Cascade KEEP=NO
  private void vdm_init_Cascade () {
    try {
      setSentinel();
      board = new Board();
      level = new Integer(1);
      score = new Integer(0);
      timeToNextLevel = UTIL.NumberToInt(new Integer((int)(1000 * (8 - (level.intValue() * 0.5)))));
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_Cascade


// ***** VDMTOOLS START Name=CalculateScore#1|Number KEEP=NO
  private Number CalculateScore (final Number n_blocks) throws CGException {
    if (!this.pre_CalculateScore(n_blocks).booleanValue()) 
      UTIL.RunTime("Precondition failure in CalculateScore");
    if (!this.post_CalculateScore(n_blocks, UTIL.NumberToInt(new Integer(50 + (20 * (n_blocks.intValue() - 3))))).booleanValue()) 
      UTIL.RunTime("Postcondition failure in CalculateScore");
    return UTIL.NumberToInt(new Integer(50 + (20 * (n_blocks.intValue() - 3))));
  }
// ***** VDMTOOLS END Name=CalculateScore#1|Number


// ***** VDMTOOLS START Name=pre_CalculateScore#1|Number KEEP=NO
  private Boolean pre_CalculateScore (final Number n_blocks) throws CGException {
    return Boolean.valueOf(n_blocks.intValue() >= MinNumber.intValue());
  }
// ***** VDMTOOLS END Name=pre_CalculateScore#1|Number


// ***** VDMTOOLS START Name=post_CalculateScore#2|Number|Number KEEP=NO
  private Boolean post_CalculateScore (final Number n_blocks, final Number RESULT) throws CGException {
    return Boolean.valueOf(RESULT.intValue() >= 50);
  }
// ***** VDMTOOLS END Name=post_CalculateScore#2|Number|Number


// ***** VDMTOOLS START Name=Cascade KEEP=NO
  public Cascade () throws CGException {
    try {
      vdm_init_Cascade();
      new NewLineThread(this).start();
      new NextLevelThread(this).start();
      setSentinel();
    }
    catch (Throwable e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=Cascade


// ***** VDMTOOLS START Name=play#1 KEEP=NO
  public Number play (final Board.Position pos) throws CGException {
    sentinel.entering(((CascadeSentinel)sentinel).play);
    try {
      Number n_pieces = board.deletePieces(pos);
      if (n_pieces.intValue() >= 3) {
        score = new Integer(score.intValue() + CalculateScore(n_pieces).intValue());
        return CalculateScore(n_pieces);
      }
      else 
        return new Integer(0);
    }
    finally {
      sentinel.leaving(((CascadeSentinel)sentinel).play);
    }
  }
// ***** VDMTOOLS END Name=play#1

}
;
