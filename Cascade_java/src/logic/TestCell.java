//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at 2013-12-08 by the VDM++ to JAVA Code Generator
// (v9.0.2 - Thu 14-Mar-2013 12:36:47 +0900)
//
// Supported compilers: jdk 1.4/1.5/1.6
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// This file was genereted from "D:\\Workspace\\MFES\\Project\\Cascade\\Cell/TestCell.rtf".

// ***** VDMTOOLS START Name=package KEEP=NO
package logic;
// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO
import jp.vdmtools.VDM.UTIL;
import jp.vdmtools.VDM.Sentinel;
import jp.vdmtools.VDM.EvaluatePP;
import jp.vdmtools.VDM.CGException;
// ***** VDMTOOLS END Name=imports



public class TestCell implements EvaluatePP {

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=TestCellSentinel KEEP=NO
  class TestCellSentinel extends Sentinel {

    public final int AssertTrue = 0;

    public final int TestMakeBomb = 1;

    public final int TestClearCell = 2;

    public final int TestCreateCell = 3;

    public final int runAllTestsCell = 4;

    public final int nr_functions = 5;


    public TestCellSentinel () throws CGException {}


    public TestCellSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=TestCellSentinel
;

// ***** VDMTOOLS START Name=evaluatePP#1|int KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return Boolean.TRUE;
  }
// ***** VDMTOOLS END Name=evaluatePP#1|int


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new TestCellSentinel(this);
    }
    catch (Exception e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=vdm_init_TestCell KEEP=NO
  private void vdm_init_TestCell () {
    try {
      setSentinel();
    }
    catch (Exception e) {
      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=vdm_init_TestCell


// ***** VDMTOOLS START Name=TestCell KEEP=NO
  public TestCell () throws CGException {
    vdm_init_TestCell();
  }
// ***** VDMTOOLS END Name=TestCell


// ***** VDMTOOLS START Name=AssertTrue#1|Boolean KEEP=NO
  public void AssertTrue (final Boolean a) throws CGException {
    sentinel.entering(((TestCellSentinel)sentinel).AssertTrue);
    try {
      if (!this.pre_AssertTrue(a).booleanValue()) 
        UTIL.RunTime("Precondition failure in AssertTrue");
      return;
    }
    finally {
      sentinel.leaving(((TestCellSentinel)sentinel).AssertTrue);
    }
  }
// ***** VDMTOOLS END Name=AssertTrue#1|Boolean


// ***** VDMTOOLS START Name=pre_AssertTrue#1|Boolean KEEP=NO
  public Boolean pre_AssertTrue (final Boolean a) throws CGException {
    return a;
  }
// ***** VDMTOOLS END Name=pre_AssertTrue#1|Boolean


// ***** VDMTOOLS START Name=runAllTestsCell KEEP=NO
  public void runAllTestsCell () throws CGException {
    sentinel.entering(((TestCellSentinel)sentinel).runAllTestsCell);
    try {
      TestCreateCell();
      TestClearCell();
      TestMakeBomb();
    }
    finally {
      sentinel.leaving(((TestCellSentinel)sentinel).runAllTestsCell);
    }
  }
// ***** VDMTOOLS END Name=runAllTestsCell


// ***** VDMTOOLS START Name=TestCreateCell KEEP=NO
  public void TestCreateCell () throws CGException {
    sentinel.entering(((TestCellSentinel)sentinel).TestCreateCell);
    try {
      Cell cell = new Cell(new quotes.red());
      Cell cell2 = new Cell();
      AssertTrue(Boolean.valueOf(UTIL.equals((cell.color), new quotes.red())));
      AssertTrue(Boolean.valueOf(UTIL.equals((cell2.color), new quotes.empty())));
    }
    finally {
      sentinel.leaving(((TestCellSentinel)sentinel).TestCreateCell);
    }
  }
// ***** VDMTOOLS END Name=TestCreateCell


// ***** VDMTOOLS START Name=TestClearCell KEEP=NO
  public void TestClearCell () throws CGException {
    sentinel.entering(((TestCellSentinel)sentinel).TestClearCell);
    try {
      Cell cell = new Cell(new quotes.red());
      cell.clear();
      AssertTrue(Boolean.valueOf(UTIL.equals((cell.color), new quotes.empty())));
    }
    finally {
      sentinel.leaving(((TestCellSentinel)sentinel).TestClearCell);
    }
  }
// ***** VDMTOOLS END Name=TestClearCell


// ***** VDMTOOLS START Name=TestMakeBomb KEEP=NO
  public void TestMakeBomb () throws CGException {
    sentinel.entering(((TestCellSentinel)sentinel).TestMakeBomb);
    try {
      Cell cell = new Cell();
      cell.makeBomb();
      AssertTrue(Boolean.valueOf(UTIL.equals((cell.color), new quotes.bomb())));
    }
    finally {
      sentinel.leaving(((TestCellSentinel)sentinel).TestMakeBomb);
    }
  }
// ***** VDMTOOLS END Name=TestMakeBomb

}
;
